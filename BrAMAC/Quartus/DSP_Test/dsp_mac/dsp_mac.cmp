	component dsp_mac is
		port (
			ay         : in  std_logic_vector(7 downto 0)  := (others => 'X'); -- ay
			by         : in  std_logic_vector(17 downto 0) := (others => 'X'); -- by
			ax         : in  std_logic_vector(7 downto 0)  := (others => 'X'); -- ax
			bx         : in  std_logic_vector(17 downto 0) := (others => 'X'); -- bx
			chainin    : in  std_logic_vector(63 downto 0) := (others => 'X'); -- chainin
			accumulate : in  std_logic                     := 'X';             -- accumulate
			resulta    : out std_logic_vector(26 downto 0);                    -- resulta
			chainout   : out std_logic_vector(63 downto 0);                    -- chainout
			clk0       : in  std_logic                     := 'X';             -- clk
			clk1       : in  std_logic                     := 'X';             -- clk
			clk2       : in  std_logic                     := 'X';             -- clk
			ena        : in  std_logic_vector(2 downto 0)  := (others => 'X'); -- ena
			aclr0      : in  std_logic                     := 'X';             -- reset
			aclr1      : in  std_logic                     := 'X'              -- reset
		);
	end component dsp_mac;

